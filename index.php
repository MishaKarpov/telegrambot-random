<?php

// Get input stream from WebHooks
$content = file_get_contents("php://input");


// Script will be continue execution after disconnect client
ignore_user_abort(true);
set_time_limit(0);

// Disconnecting client with header status 200 
header('Status: 200 Ok');
fastcgi_finish_request();

// Load database config
require_once 'bd.php';

// Telegram API token, generated by @BotFather
$token = "here-your-telegram-bot-token";

$data = json_decode($content);



/**
 *  Catches commands
 */
switch ($data->message->text) {
    case "/stats":
        // Calculate total file messages in database
        $cF = $dbh->query("SELECT count(*) from files")->fetchColumn();
        // Calculate total photo messages in database
        $cP = $dbh->query("SELECT count(*) from files where type='p'")->fetchColumn();
        // Calculate total voice messages in database
        $cV = $dbh->query("SELECT count(*) from files where type='v'")->fetchColumn();
        // Calculate total audio messages in database
        $cA = $dbh->query("SELECT count(*) from files where type='a'")->fetchColumn();

        sendMessage('Total files: ' . $cF . '%0APhoto: ' . $cP . '%0AAudio: ' . $cA . '%0AVoice: ' . $cV);
        exit();

    case "/start":
        sendMessage('Welcome. Let`s send here photo, audio or voice message and you get similar message from random user.');
        exit();
}



/**
 * 
 * char $type, mark message, where:
 * 'p' is photo message
 * 'v' is voice message
 * 'a' is audio (mp3) message 
 *
 */
unset($type);
unset($method);

// Determine type of message and save file identifier
if ($photo = $data->message->photo) {
    // Photo have different sizes, cus save identifier of biggest
    $file_id = $photo[count($photo) - 1]->file_id;
    $type = 'p';
    $method = "sendPhoto?photo=";
} elseif ($audio = $data->message->audio) {
    $file_id = $audio->file_id;
    $type = 'a';
    $method = "sendAudio?audio=";
} elseif ($voice = $data->message->voice) {
    $file_id = $voice->file_id;
    $type = 'v';
    $method = "sendVoice?voice=";
} else {
    sendMessage('Please, send file (photo,audio or voice).');
    exit();
}


// Check file to unique
$count = $dbh->query("SELECT count(*) from files where file_id='$file_id'");

if ($count->fetchColumn() > 0) {
    sendMessage('Sorry, this file exists in our database, send another file.');
    exit();
}



// Random select similar file to answer
$query = $dbh->query("SELECT file_id from files where type='" . $type . "' AND chat_id!='" . $data->message->from->id . "' ORDER BY RANDOM() LIMIT 1;");

if ($newFile = $query->fetchColumn()) {
    $method .= $newFile;

    // Send answer
    file_get_contents('https://api.telegram.org/bot' . $token . '/' . $method . '&chat_id=' . $data->message->from->id);
} else {

    sendMessage('Sorry! There are no files of this type in our database.');
}


// Storage input file identifier to database 
$dbh->exec("INSERT INTO files (username,chat_id, file_id, type, json) VALUES ('" . $data->message->from->username . "','" . $data->message->from->id . "', '" . $file_id . "' ,'" . $type . "' , " . $dbh->quote($content) . ")");

/**
 * 
 * Send text message to user
 * @global string $token
 * @global type $data
 * @param type $message
 * 
 */
function sendMessage($message) {
    global $token;
    global $data;
    file_get_contents('https://api.telegram.org/bot' . $token . '/sendMessage?chat_id=' . $data->message->from->id . '&text=' . $message);
}

?>